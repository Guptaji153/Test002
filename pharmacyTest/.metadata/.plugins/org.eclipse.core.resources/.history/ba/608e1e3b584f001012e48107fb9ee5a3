package com.java.test.controller;

import javax.faces.application.FacesMessage;
import javax.faces.context.FacesContext;

import com.java.test.dao.impl.PharmacyDaoImpl;
import com.java.test.model.Pharmacy;
import com.java.test.model.PharmacyOTP;

public class PharmacyController {

    private PharmacyDaoImpl pharmacyDao;
    private Pharmacy pharmacy;
    private PharmacyOTP pharmacyOTP;
    
    // Confirm password field for reset password page
    private String confirmPassword;

    // Getters and Setters
    public PharmacyDaoImpl getPharmacyDao() {
        return pharmacyDao;
    }

    public void setPharmacyDao(PharmacyDaoImpl pharmacyDao) {
        this.pharmacyDao = pharmacyDao;
    }

    public Pharmacy getPharmacy() {
        return pharmacy;
    }

    public void setPharmacy(Pharmacy pharmacy) {
        this.pharmacy = pharmacy;
    }

    public PharmacyOTP getPharmacyOTP() {
        return pharmacyOTP;
    }

    public void setPharmacyOTP(PharmacyOTP pharmacyOTP) {
        this.pharmacyOTP = pharmacyOTP;
    }

    public String getConfirmPassword() {
        return confirmPassword;
    }

    public void setConfirmPassword(String confirmPassword) {
        this.confirmPassword = confirmPassword;
    }

    // Register Pharmacy and redirect to OTP page
    public String registerPharmacy() {
        String result = pharmacyDao.addPharmacy(pharmacy);
        FacesContext.getCurrentInstance().addMessage(null,
            new FacesMessage(FacesMessage.SEVERITY_INFO, result, null));
        return "otp.jsf?faces-redirect=true";  // redirect to OTP page
    }

    // Verify OTP only (email removed, so use pharmacy.email from session/bean)
//    public String verifyOTP() {
//        // pharmacy.email must already be set before (e.g. during registration)
//        int enteredOtp = pharmacyOTP.getOtpCode();
//        String email = pharmacy.getEmail();
//
//        String result = pharmacyDao.verifyOtp(email, enteredOtp);
//
//        if (result.equalsIgnoreCase("OTP verified successfully")) {
//            FacesContext.getCurrentInstance().addMessage(null,
//                new FacesMessage(FacesMessage.SEVERITY_INFO, result, null));
//            return "resetPassword.jsf?faces-redirect=true";  // redirect to reset password page
//        } else {
//            FacesContext.getCurrentInstance().addMessage(null,
//                new FacesMessage(FacesMessage.SEVERITY_ERROR, result, null));
//            return null; // stay on OTP page
//        }
//    }
    
    public String verifyOtp() {
        // assuming pharmacy.email and pharmacyOTP.otpCode are Strings
        String email = pharmacy.getEmail();
        String otpString = pharmacyOTP.getOtpCode(); // this is String from input

        int otpCode = 0;
        try {
            otpCode = Integer.parseInt(otpString);
        } catch (NumberFormatException e) {
            // handle invalid OTP input
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR, "Invalid OTP format", null));
            return null; // stay on same page
        }

        String result = pharmacyDao.verifyOtpAndActivateAccount(email, otpCode);
        
        if (result.contains("success")) {
            return "resetPassword.jsf?faces-redirect=true";
        } else {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR, result, null));
            return null;
        }
    }


    // Update Password with confirm password validation
    public String updatePassword() {
        if (!pharmacy.getPassword().equals(confirmPassword)) {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR, "Passwords do not match.", null));
            return null;  // stay on reset password page
        }

        String result = pharmacyDao.updatePassword(pharmacy.getEmail(), pharmacy.getPassword());

        if ("Pharmacy Updated Successfully".equalsIgnoreCase(result)) {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_INFO, "Password updated. You can now login.", null));
            return "login.jsf?faces-redirect=true";  // redirect to login page
        } else {
            FacesContext.getCurrentInstance().addMessage(null,
                new FacesMessage(FacesMessage.SEVERITY_ERROR, result, null));
            return null;  // stay on reset password page
        }
    }

}
