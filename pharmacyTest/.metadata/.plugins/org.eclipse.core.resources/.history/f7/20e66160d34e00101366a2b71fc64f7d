package com.java.test.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;

import com.java.test.dao.PharmacyDao;
import com.java.test.model.Pharmacy;
import com.java.test.util.DBConnection;

public class PharmacyDaoImpl implements PharmacyDao {

    @Override
    public String addPharmacy(Pharmacy pharmacy) {
        String sql = "INSERT INTO pharmacies (pharmacyName, licenseNo, contactNo, email, state, city, status) VALUES (?, ?, ?, ?, ?, ?, ?)";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {
            
            ps.setString(1, pharmacy.getPharmacyName());
            ps.setString(2, pharmacy.getLicenseNo());
            ps.setString(3, pharmacy.getContactNo());
            ps.setString(4, pharmacy.getEmail());
            ps.setString(5, pharmacy.getState());
            ps.setString(6, pharmacy.getCity());
            ps.setString(7, "Pending");  // Initial status
            
            int rows = ps.executeUpdate();
            if (rows > 0) {
                return "Pharmacy registered successfully. Please verify OTP sent to your email.";
            } else {
                return "Error: Unable to register pharmacy.";
            }
        } catch (Exception e) {
            e.printStackTrace();
            return "Exception occurred: " + e.getMessage();
        }
    }

    @Override
    public String verifyOtp(String email, int otp) {
        String sqlSelect = "SELECT otpCode FROM pharmacy_otps WHERE email = ?";
        String sqlDelete = "DELETE FROM pharmacy_otps WHERE email = ?";
        String sqlUpdate = "UPDATE pharmacies SET status = 'Active' WHERE email = ?";
        
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement psSelect = conn.prepareStatement(sqlSelect);
             PreparedStatement psDelete = conn.prepareStatement(sqlDelete);
             PreparedStatement psUpdate = conn.prepareStatement(sqlUpdate)) {

            // Fetch OTP from DB
            psSelect.setString(1, email);
            ResultSet rs = psSelect.executeQuery();
            
            if (rs.next()) {
                int dbOtp = rs.getInt("otpCode");
                if (dbOtp == otp) {
                    // OTP matched - activate pharmacy
                    psUpdate.setString(1, email);
                    int updated = psUpdate.executeUpdate();

                    // Remove OTP record after verification
                    psDelete.setString(1, email);
                    psDelete.executeUpdate();

                    if (updated > 0) {
                        return "OTP verified successfully. Your account is now active.";
                    } else {
                        return "Error: Unable to activate your account.";
                    }
                } else {
                    return "Invalid OTP. Please try again.";
                }
            } else {
                return "OTP not found for this email. Please register first.";
            }
        } catch (Exception e) {
            e.printStackTrace();
            return "Exception occurred: " + e.getMessage();
        }
    }

    @Override
    public boolean validatePassword(String email, String password) {
        String sql = "SELECT password, status FROM pharmacies WHERE email = ?";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, email);
            ResultSet rs = ps.executeQuery();
            
            if (rs.next()) {
                String storedPassword = rs.getString("password");
                String status = rs.getString("status");
                // Check password and that account is active
                return password.equals(storedPassword) && "Active".equalsIgnoreCase(status);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }

    @Override
    public String updatePassword(String email, String pwd) {
        String sql = "UPDATE pharmacies SET password = ? WHERE email = ?";
        try (Connection conn = DBConnection.getConnection();
             PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setString(1, pwd);
            ps.setString(2, email);

            int rows = ps.executeUpdate();
            if (rows > 0) {
                return "Password updated successfully.";
            } else {
                return "Failed to update password.";
            }
        } catch (Exception e) {
            e.printStackTrace();
            return "Exception occurred: " + e.getMessage();
        }
    }
}
